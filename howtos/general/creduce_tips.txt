=======================================
CReduce tips
=======================================

Resources:

- CReduce homepage:
  https://embed.cs.utah.edu/creduce

- Slides:
  https://embed.cs.utah.edu/creduce/pldi12_talk.pdf

- Github:
  https://github.com/csmith-project/creduce

Tips:

- When reducing, make sure the test case remains valid at all times
  - Check against host gcc, clang, or both
  - Compile with -Wall -Werror
  - Check for the exact error message in the interestingness test

- If there's very easy and quick minimization (like reducing the number of test cases), it's good to do it first.

Examples:

- Example command line:
  creduce ./run.sh md5-v1.c --timeout 30

- Example interestingness test #1
  -------------------------------

  #!/bin/bash -exu
  
  # Verify with mainstream compilers, max warnings + ubsan + static analyzer + valgrind
  C_FILE=md5-v1.c
  gcc      -fstack-protector-all -fsanitize=undefined -fno-sanitize-recover     -O3 -Wall -Wextra -Werror $C_FILE && ./a.out
  gcc      -fstack-protector-all -fsanitize=undefined -fno-sanitize-recover     -O0 -Wall -Wextra -Werror $C_FILE && ./a.out
  clang-10 -fstack-protector-all -fsanitize=undefined -fno-sanitize-recover=all -O1 -Wall -Wextra -Werror $C_FILE && ./a.out
  clang-10 --analyze $C_FILE 2>err.txt
  if [ -s err.txt ]; then
    echo "Static analyzer warnings found!"; exit 1
  fi
  gcc -O0 $C_FILE && valgrind --error-exitcode=1 ./a.out

  # Verify with tools/options of choice
  $LLVM_BIN/clang --target=ppc -O1 -static $C_FILE
  set +e
  ./a.out > out.txt 2<&1
  set -e
  # Use exact error string check to prevent false positives
  cat out.txt | grep "Assertion failed: result\[i\] == res1\[i\]"
  echo "OK."

- Example interestingness test #2
  -------------------------------

  #!/bin/bash -exu

  gcc -O0 -Wall -Wextra -Werror muldi3.c
  ./a.out
  clang -O3 -Wall -Wextra -Werror muldi3.c
  ./a.out
  clang --target=powerpc-linux-gnu -O0 muldi3.c -isystem /usr/powerpc-linux-gnu/include -static
  qemu-ppc ./a.out

  $LLVM_BIN/clang -O0 -static muldi3.c

  set +e
  $LLVM_BIN/sim ./a.out > out.txt 2<&1
  set -e
  cat out.txt | grep "Assertion failed: x == expected"
  echo "OK."
