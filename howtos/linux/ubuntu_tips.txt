Ubuntu cheat sheet
------------------

Basics:

- Back to previous folder                 cd -
- Set env. variable with global scope     export VAR=VAL
- Display env. variable                   echo $VAR
- Show running shell                      echo $0
- Print all env. variables                printenv
- Exit code of last command               echo $?
- Search recent shell commands            Ctrl + R
- Make shell exit on error                set -e (set +e to revert)
- Make shell echo executed commands       set -x (set +x to revert)
- Bash "strict mode"                      set -euo pipefail
- Run script in the same shell env.       . script.sh
- Change languague                        Super key [Windows Key] + Space
- Redirect stdout and stderr to file      cmd >log.txt 2>&1
- Quick copy                              Shift + Ctrl + C
- Quick paste                             Shift + Ctrl + V
- sudo with inherited env. vars           sudo -E <cmd>
- Run GUI program as root                 gksudo <cmd>

Folders:

- Remove a non-empty folder               rm -rf <folder-name>
- Copy folder                             cp -r <src> <dst>
- Copy folder with specific files         cd $dir; find . -name '*.txt' | cpio -pdm $target_dir
- Visualize tree structure                tree
- Open current folder in Ubuntu GUI       nautilus .

Files:

- Get the type of a file                  file <filename>
- Get the type of function/alias          type <alias>
- Get the full path of a file             realpath <filename>
- Create a symbolic link                  ln -s <link from> <link name>
- Batch rename                            rename -v 's/something//' *.txt
- Recursive dos2unix                      find . -type f -print0 | xargs -0 dos2unix

Finding files:

- Locate a file, first in PATH:           whereis <filename>
- Locate all files matching wildcard      locate <filename>
- Find a file in folder hierarcy          find . -name "wildcard"
- Find files with several wildcards       find -type f \( -name "*.ext1" -o -name "*.ext2" \)
- Find folders created today              find . -mtime -1 -type d -print | grep -v "^.$"

Searching in files:

- Search recursively in all files         grep -r "string"
- List files matching an expression       grep -l "expr" * (or --files-with-match)
- List files NOT matching an expression   grep -L "expr" * (or --files-without-match)
- Search string in specific file types    find . -type f -name '*.cpp' | xargs grep "string"
- Count "-o" in all commands files        ls commands*.txt | xargs grep '^\-o' | count 1
- Grep results with sorrounding context   cat file.txt | grep icudt55_dat -B 10 -A 20
- Search numbers with X digits            grep 'heap: ([0-9]\{11\}B' *.log
- Grep w/o color (disable ANSI output)    grep --color=never ...

Binary inspection:

- Search objects for debug symbol         find . -name "*.o" -exec nm -A {} \; | grep "_foo"
- Search .so for dynamic symbol           objdump -T lib.so | grep sym

Disk usage:

- Disk usage of current folder            du -sh
- Disk usage of each file                 du -sh *
- Summary of disks and free space         df -h
- Sizes of all files of type, recursive   du -ab . | grep cpp$ | sort -n
- Ubuntu Disk Usage Analyzer              baobab
- Empty the bin                           trash-empty (requires trash-cli)
- Junk cleaner                            sudo bleachbit
- Package manager                         synaptic

Text processing:

- Remove blank lines from file            sed -i '/^\s*$/d' file.txt
- Remove N=123 lines after a match        sed -i '/my-regex/,+123d' file.txt
- Remove trailing spaces                  sed -i 's/ *$//' file.txt
- Perl as sed                             perl -pe "s/^\w+\s+//"
- Convert epoch to local time (Windows)   perl -pe "s/([\d]{10})/localtime $1/eg;" inp.txt
- Convert epoch to local time (Linux)     perl -pe 's/([\d]{10})/localtime $1/eg;' inp.txt
- Sort text by string length              perl -e 'print sort { length($a) <=> length($b) } <>' inp.txt

Process management:

- Processes stats (CPU, memory)           top, htop
- Process info in batch mode              top -b -p `pidof some_running_process`
- nmon monitoring tool - CPU and more     nmon
- Killing a process                       kill <pid>
- Kill process by name                    pkill java*
- Get process PID                         pidof <pname>
- List processes by name                  ps -ef | grep myprog
- Get pid's of processes matching regexp  ps -ef | grep 'java -agentpath:' | perl -pe "s/^\w+\s+//" | perl -pe "s/\s+.*$//" | head -n -1
  * ps -ef is more portable than ps aux
- Max mem usage by process                /usr/bin/time --format='(%Xtext+%Ddata %Mmax)' <command>
- Give time out to shell sub processes    ulimit -t <seconds>

System:

- Linux distro version                    lsb_release -a
- CPU info                                lscpu
- Linux kernel version                    uname -r
- System info - abbreviated summary       inxi
- System info - detailed summary          inxi -Fxz
- Restart machine                         sudo reboot
- Show all running services               service --status-all
- Show system uptime                      uptime
- Check filesystem                        sudo e2fsck -fv /dev/sdX
- Check HD for bad blocks                 sudo fsck -c /dev/sdX

Boot:

- Disable secure boot (for VirtualBox)    sudo mokutil --disable-validation
- Re-enable secure boot                   sudo mokutil --enable-validation

Permissions:

- Read+write permissions to me only       chmod 400 file
- Give execute permission                 chmod +x file

Date and time:

- Disable auto time update                timedatectl set-ntp 0
- Enable auto time update                 timedatectl set-ntp 1
- Set date – example                      sudo date -s "30 OCT 2016 18:00:00"
- Seconds since the epoch (1/1/1970)      date +%s
- Date in DD/MM/YY format                 date +%D
- Date and time                           date '+%D %T'

Network:

- Network status                          nmcli dev show
- IP address                              ip addr show
- MAC address                             ifconfig | grep Hwaddr
- Active internet connection              netstat -tan
- Check site accessibility (example)      curl -i localhost:9072/ibm/console
- Speed of transfers                      sudo iftop
- Open ports                              sudo netstat -ntlp | grep LISTEN
- Restart network connection              sudo service network-manager restart
- Restart SSHD service                    sudo pkill sshd

Make:

- Verbose build (any make impl.)          make SHELL='sh -x'
- Verbose build (GNU make)                make VERBOSE=1

Linking:

- Find library reachable by ld            ldconfig -p | grep <libname>

Profiling:

- Perf basic CPU stats                    perf stat <command>
- Perf detailed CPU stats                 perf stat -d <command>
- Perf cache events                       perf stat -e cache-references,cache-misses <command>
- Perf list available event types         perf list
- Perf examples and cheat sheet           http://www.brendangregg.com/perf.html

Transferring files:

- Download file from link                 wget <url>
- Copy remote files                       scp [-P port] src dst    [ Example: scp foo.txt user@server.com:/tmp ]
- Copying text to clipboard               xsel --clipboard < somefile

Desktop:

- Add a desktop shortcut                  gnome-desktop-item-edit --create-new ~/Desktop
  (prerequisite)                          sudo apt-get install --no-install-recommends gnome-panel

Connecting and working on remote machine:

- Connect to a server                     ssh [-p port] user@server.com
- New screen                              screen -d -R <name>
- Connect to existing screen              screen -x <name>

Monitor:

- Screen brightness (example)             xbacklight +50
- Screen contrant (example)               xrandr -gamma 0.5

Sound:

- No sound from headphones (1)            alsactl restore
- No sound from headphones (2)            sudo alsa force-reload
- Display installed sound cards           aplay -l
- "Top five wrong ways to fix your audio" http://voices.canonical.com/david.henningsson/2012/07/13/top-five-wrong-ways-to-fix-your-audio/

Compression:

- Compress a single file/folder (GNU tar) tar -cvf archive.tar.gz /fullpath/to/folder-or-file
- Compress a single folder (zip)          zip -r zipname foldername/*
- Unzip all zip files into current dir    for file in `ls *.zip`; do unzip $file; done
- Unzip all zip files into seperate dirs  for file in `ls *.zip`; do unzip $file -d `echo $file | cut -d . -f 1`; done
- Extract rpm                             rpm2cpio myinstaller.rpm | cpio -idmv
- Extract gz                              gunzip file.gz
- Extract xz                              unxz file.xz

Troubleshooting:

- Get system calls trace for a process    strace <command>
- Enter virtual console                   Ctrl + Alt + F1
- Exit virtual console, back to desktop   Ctrl + Alt + F7

Useful Utilities:

- Paritition mangement                    gparted
- Unity tweaker                           unity-tweak-tool

Source Code Formatting:

- Format with astyle, inplace              astyle --suffix=none path/to/file.cpp
- Format with astyle, inplace, recursive   astyle --suffix=none -r "./tree/root/*.cpp"
- Format with astyle, with backup          astyle path/to/file.cpp
- Useful astyle parameters                 --indent=force-tab --indent-preproc-cond --indent-after-parens --indent-continuation=1

Misc:

- Display image                           xdg-open <image.jpg>
- Hexadecimal text to binary              xxd -r -p input.txt output.jar
- hex2dec                                 echo $(( 16#<Hex constant> ))
- MD5 sum of a file                       md5sum <filename>
- SHA256 sum of a file                    sha256sum <filename>
- Create 1MB binary file filled with 0's  dd if=/dev/zero of=out.bin count=1 bs=1MB
- Create 1MB binary file filled randomly  dd if=/dev/urandom of=out.bin count=1000 bs=1000
- Create 1MB text file with random text   base64 /dev/urandom | head -c 1000000 > out.txt
- Count source lines                      sloccount --multiproject
  * Note: found sloccount as most reliable comparing to cloc, ohcount
